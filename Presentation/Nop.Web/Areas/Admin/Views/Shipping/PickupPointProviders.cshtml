@model PickupPointProviderSearchModel

@{    
    //page title
    ViewBag.Title = T("Admin.Configuration.Shipping.PickupPointProviders").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Pickup points");
}

<nop-antiforgery-token />
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Configuration.Shipping.PickupPointProviders")
    </h1>
    <div class="pull-right">
        &nbsp;
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.PickupPointProviderListButtons })
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-body">
                    @await Html.PartialAsync("Table", new DataTablesModel
                    {
                        Name = "pickup-point-providers-grid",
                        UrlRead = new DataUrl("PickupPointProviders", "Shipping", null),
                        UrlUpdate = new DataUrl("PickupPointProviderUpdate", "Shipping", null),
                        Length = Model.PageSize,
                        LengthMenu = Model.AvailablePageSizes,
                        ColumnCollection = new List<ColumnProperty>
                            {
                                new ColumnProperty(nameof(PickupPointProviderModel.FriendlyName))
                                {
                                    Title = T("Admin.Configuration.Shipping.PickupPointProviders.Fields.FriendlyName").Text,
                                    Width = "250"
                                },
                                new ColumnProperty(nameof(PickupPointProviderModel.SystemName))
                                {
                                    Title = T("Admin.Configuration.Shipping.PickupPointProviders.Fields.SystemName").Text,
                                    Width = "250"
                                },
                                new ColumnProperty(nameof(PickupPointProviderModel.LogoUrl))
                                {
                                    Title = T("Admin.Configuration.Shipping.PickupPointProviders.Fields.Logo").Text,
                                    Width = "100",
                                    Render = new RenderPicture()
                                },
                                new ColumnProperty(nameof(PickupPointProviderModel.DisplayOrder))
                                {
                                    Title = T("Admin.Configuration.Shipping.PickupPointProviders.Fields.DisplayOrder").Text,
                                    Width = "100",
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Editable = true,
                                    EditType = EditType.Number
                                },
                                new ColumnProperty(nameof(PickupPointProviderModel.IsActive))
                                {
                                    Title = T("Admin.Configuration.Shipping.PickupPointProviders.Fields.IsActive").Text,
                                    Width = "100",
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Render = new RenderBoolean(),
                                    Editable = true,
                                    EditType = EditType.Checkbox
                                },
                                new ColumnProperty(nameof(PickupPointProviderModel.SystemName))
                                {
                                    Title = T("Admin.Configuration.Shipping.PickupPointProviders.Configure").Text,
                                    Width = "150",
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Render = new RenderCustom("renderColumnConfigure")
                                },
                                new ColumnProperty(nameof(PickupPointProviderModel.SystemName))
                                {
                                    Title = T("Admin.Common.Edit").Text,
                                    Width = "200",
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Render = new RenderButtonsInlineEdit()
                                }
                            }
                    })

                    <script>
                        function renderColumnConfigure(data, type, row, meta) {
                            if (row.ConfigurationUrl && row.ConfigurationUrl.length > 0) {
                                return '<a class="btn btn-default" href="' + row.ConfigurationUrl + '"><i class="fa fa-cog"></i>@T("Admin.Configuration.Shipping.PickupPointProviders.Configure")</a>';
                            } else {
                                return '';
                            }
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>